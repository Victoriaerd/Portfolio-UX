@charset "UTF-8";

/*
====================================HEAL'S 3D PAGE CSS=========================================*/
.grid-container {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-gap: 10px;
}

body {
  line-height: calc(1em + 1rem);
}

main {
  background-color: white;
}

section {
  padding: 0;
  margin-top: 0;
}

h1.photography {
  font-size: 2.5rem;
  font-weight: 400;
  color: var(--fontcolor);
  padding: 1rem;
  margin: 1rem;
  text-align: center;
}

p.photography {
  font-size: 1.2rem;
  text-align: center;
  padding-bottom: 2rem;
}

/* Using ::after element to create hover over effect without adding additional html
add z-index to h2.text to fix issue caused by absolute positioning where the text overlay wasn't visible */

h2.text {
  color: var(--fontcolor);
  font-family: "Oswald", sans-serif;
  line-height: 3rem;
  font-size: 2rem;
  font-weight: 500;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(
    -50%,
    -50%
  ); /*The translate() CSS function repositions an element in the horizontal and/or vertical directions. Used to position the text in the middle of the overlay*/
  text-align: center;
  z-index: 100;
  padding: 0;
  margin: 0;
  opacity: 0;
}
.grid-item::after {
  content: "";
  position: absolute;
  transition: 0.5s ease;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: #ffffff;
  opacity: 0;
  z-index: 1;
  pointer-events: none; /* this makes the whole area clickable on hover over not just the text 
  https://stackoverflow.com/questions/3680429/click-through-div-to-underlying-elements */
}
.grid-item:hover::after {
  opacity: 0.7;
}
.grid-item:hover h2.text {
  opacity: 1;
}
/* .grid-item > * {
  z-index: 1;
} */

/*====================================== Tablet View: ===================================*/

@media only screen and (max-width: 768px) {
  body {
    font-size: 14px;
  }
  h1.photography {
    font-size: 2rem;
    font-weight: 400;
    color: var(--fontcolor);
    padding: 0.5rem;
    text-align: center;
  }
  .grid-container {
    display: grid;
    grid-template-columns: 50% 50%;
    grid-gap: 10;
    margin-top: 0%;
  }
  .grid-item {
    grid-template-columns: repeat(2, 1fr);
  }
}

/*
====================================Mobile View========================================*/
@media screen and (max-width: 568px) {
  .grid-container {
    grid-template-columns: 100%;
    grid-gap: 10;
    margin-top: 0%;
  }
}
